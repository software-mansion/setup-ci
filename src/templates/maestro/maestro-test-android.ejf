<%
const startBundler = {
  yarn: `yarn ${(props.isMonorepo) ? `--cwd ${props.pathRelativeToRoot} ` : ""}start`,
  npm: `npm run start ${(props.isMonorepo) ? `--prefix ${props.pathRelativeToRoot}` : ""}`,
  bun: `bun run ${(props.isMonorepo) ? `--cwd ${props.pathRelativeToRoot} ` : ""}start`,
}
%>

name: Maestro Test Android

<%- include('../common/triggerEvents', { props }); %>

jobs:
  build-debug-android:
    name: Build Android Debug App
    uses: ./.github/workflows/<%= props.androidDebugBuildWorkflowFileName %>

  maestro-test-android:
    name: Maestro Test Android
    needs: build-debug-android
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      checks: read
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      API_LEVEL: 34
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🐛 Restore debug build from cache
        uses: actions/cache/restore@v4
        with:
          path: android-debug-build/
          key: ${{ needs.build-debug-android.outputs.build-cache-key }}

      <%- include('../common/managerSetupStep', { props }); %>

      <%- include('../common/runtimeSetupStep', { props }); %>

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: 🐘 Setup Gradle 8.8
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.8

      - name: 📦 Install dependencies
        run: <%- include('../common/installCommand', { props }); %>

      - name: 📦 Install AVD dependencies
        run: |
          sudo apt update
          sudo apt-get install -y libpulse0 libgl1

      - name: 📦 Install Maestro
        run: |
          MAESTRO_VERSION=1.38.1
          curl -fsSL "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: 🏎️ Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: 📱 AVD cache restore
        uses: actions/cache/restore@v4
        id: avd-cache-restore
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      - name: 📷 Create AVD and generate snapshot for caching
        if: steps.avd-cache-restore.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          force-avd-creation: false
          disable-animations: false
          target: google_apis
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          avd-name: e2e_emulator
          arch: x86_64
          script: echo "Generated AVD snapshot for caching."

      - name: 📱 AVD cache save
        if: steps.avd-cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      - name: 🚇 Run Metro bundler in the background
        uses: miguelteixeiraa/action-run-in-background@v1
        with:
          script: <%= startBundler[props.packageManager] %>
          readiness-script: |
            if curl -sSf http://localhost:8081 > /dev/null; then
                echo "curl request to metro was successful."
            else
                echo "curl request to metro failed."
                exit 1
            fi

      - name: 🧪 Run Maestro tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          force-avd-creation: false
          disable-animations: false
          target: google_apis
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          avd-name: e2e_emulator
          arch: x86_64
          script: |
            adb install android-debug-build/android-debug.apk
            <%= props.packageManager %> run maestro:test
          <%= (props.isMonorepo) ?
            `working-directory: ${props.pathRelativeToRoot}` : "" %>
        env:
          MAESTRO_DRIVER_STARTUP_TIMEOUT: 120000

      - name: 📤 Store debug output if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-debug-output-android
          path: <%= props.pathRelativeToRoot %>/maestro-debug-output/**/*
          include-hidden-files: true
          overwrite: true
