"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[947],{5680:(e,i,n)=>{n.d(i,{xA:()=>s,yg:()=>b});var t=n(6540);function o(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function a(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?a(Object(n),!0).forEach((function(i){o(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function r(e,i){if(null==e)return{};var n,t,o=function(e,i){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||(o[n]=e[n]);return o}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=t.createContext({}),u=function(e){var i=t.useContext(d),n=i;return e&&(n="function"==typeof e?e(i):l(l({},i),e)),n},s=function(e){var i=u(e.components);return t.createElement(d.Provider,{value:i},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},g=t.forwardRef((function(e,i){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),c=u(n),g=o,b=c["".concat(d,".").concat(g)]||c[g]||p[g]||a;return n?t.createElement(b,l(l({ref:i},s),{},{components:n})):t.createElement(b,l({ref:i},s))}));function b(e,i){var n=arguments,o=i&&i.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=g;var r={};for(var d in i)hasOwnProperty.call(i,d)&&(r[d]=i[d]);r.originalType=e,r[c]="string"==typeof e?e:o,l[1]=r;for(var u=2;u<a;u++)l[u]=n[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6662:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>u});var t=n(8168),o=(n(6540),n(5680));const a={sidebar_position:2},l="Debug build",r={unversionedId:"aux-workflows/build-debug",id:"aux-workflows/build-debug",title:"Debug build",description:"Workflow that builds the app in debug mode for Android and iOS.",source:"@site/docs/aux-workflows/build-debug.mdx",sourceDirName:"aux-workflows",slug:"/aux-workflows/build-debug",permalink:"/setup-ci/docs/aux-workflows/build-debug",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Release build",permalink:"/setup-ci/docs/aux-workflows/build-release"},next:{title:"Lookup cached debug build",permalink:"/setup-ci/docs/aux-workflows/lookup-cached-debug-build"}},d={},u=[{value:"Usage",id:"usage",level:2},{value:"Detailed behavior",id:"detailed-behavior",level:2},{value:"Fingerprint",id:"fingerprint",level:3},{value:"Caching",id:"caching",level:3},{value:"Modified and created files",id:"modified-and-created-files",level:3},{value:"Workflow details",id:"workflow-details",level:3},{value:"build-debug-android",id:"build-debug-android",level:4},{value:"build-debug-ios",id:"build-debug-ios",level:4},{value:"Known issues and limitations",id:"known-issues-and-limitations",level:2}],s={toc:u},c="wrapper";function p(e){let{components:i,...n}=e;return(0,o.yg)(c,(0,t.A)({},s,n,{components:i,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"debug-build"},"Debug build"),(0,o.yg)("p",null,"Workflow that builds the app in debug mode for Android and iOS."),(0,o.yg)("p",null,"This workflow can be triggered by other workflows depending on it."),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Additionally, Debug build workflow is triggered every time new code is pushed to ",(0,o.yg)("inlineCode",{parentName:"p"},"main")," branch\nfor caching purposes. This way, every branch will be able to use the cached build. More information about cache scoping can be found here:\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#matching-a-cache-key"},"GitHub Docs: Matching a cache key"),".")),(0,o.yg)("h2",{id:"usage"},"Usage"),(0,o.yg)("p",null,"This workflow cannot be explicitly specified to be generated using SCI. It will be generated automatically\nif you choose to create workflow depending on it."),(0,o.yg)("h2",{id:"detailed-behavior"},"Detailed behavior"),(0,o.yg)("p",null,"Below you can find detailed information about what the script does with your project when generating Debug Build workflow."),(0,o.yg)("h3",{id:"fingerprint"},"Fingerprint"),(0,o.yg)("p",null,"This workflow takes advantage from the fact that debug builds need to be remade only if native code changes."),(0,o.yg)("p",null,"It uses ",(0,o.yg)("a",{parentName:"p",href:"https://expo.dev/blog/fingerprint-your-native-runtime"},"@expo/fingerprint")," to generate\na hash string of your native code (called ",(0,o.yg)("em",{parentName:"p"},"fingerprint"),") to cache debug builds and create new\nbuilds only if necessary."),(0,o.yg)("p",null,"This logic is extracted to auxiliary reusable workflow ",(0,o.yg)("inlineCode",{parentName:"p"},"lookup-cached-debug-build"),". You can find more\ninformation about it here: ",(0,o.yg)("a",{parentName:"p",href:"/docs/aux-workflows/lookup-cached-debug-build"},"Lookup cached debug build"),"."),(0,o.yg)("h3",{id:"caching"},"Caching"),(0,o.yg)("p",null,"Built apps will be cached using ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/actions/cache"},"actions/cache")," using keys\n",(0,o.yg)("inlineCode",{parentName:"p"},"android-debug-build-${{ android-fingerprint }}")," and\n",(0,o.yg)("inlineCode",{parentName:"p"},"ios-debug-build-${{ ios-fingerprint }}")," (fingerprints for Android and iOS apps are different)."),(0,o.yg)("p",null,"Note that this save a significant amount of time and resources, since changes in native code\nare relatively rare when developing a React Native app."),(0,o.yg)("h3",{id:"modified-and-created-files"},"Modified and created files"),(0,o.yg)("table",null,(0,o.yg)("tr",null,(0,o.yg)("th",{style:{width:"40%"}},"File"),(0,o.yg)("th",null,"Changes")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("code",null,".github/workflows/build-debug-android.yml")),(0,o.yg)("td",null,"Contains the CI workflow for building debug Android app")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("code",null,".github/workflows/build-debug-ios.yml")),(0,o.yg)("td",null,"Contains the CI workflow for building debug iOS app")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("code",null,"package.json")),(0,o.yg)("td",null,(0,o.yg)("ul",null,(0,o.yg)("li",null,"New script:",(0,o.yg)("code",null,"build:debug:android: npx expo prebuild && cd android && ./gradlew assembleDebug -DtestBuildType=debug -Dorg.gradle.jvmargs=-Xmx4g"),(0,o.yg)("br",null),"(",(0,o.yg)("code",null,"npx expo prebuild")," is ommited in non-Expo projects)"),(0,o.yg)("li",null,"New script:",(0,o.yg)("code",null,"build:debug:ios: npx expo prebuild && xcodebuild ONLY_ACTIVE_ARCH=YES -workspace ios/[iOSAppName].xcworkspace -UseNewBuildSystem=YES -scheme [iOSAppName] -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build -quiet"),(0,o.yg)("br",null),"(",(0,o.yg)("code",null,"npx expo prebuild")," is replaced with ",(0,o.yg)("code",null,"cd ios && pod install && cd..")," in non-Expo projects)",(0,o.yg)("br",null),"(",(0,o.yg)("code",null,"[iOSAppName]")," is replaced with the name of the iOS app retrieved from native code)")))),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("code",null,"app.json")),(0,o.yg)("td",null,"Fields ",(0,o.yg)("code",null,"expo.android.package")," and ",(0,o.yg)("code",null,"expo.ios.bundleIdentifier")," will be created in Expo projects if not detected (they are needed for ",(0,o.yg)("code",null,"npx expo prebuild"),")"))),(0,o.yg)("h3",{id:"workflow-details"},"Workflow details"),(0,o.yg)("h4",{id:"build-debug-android"},"build-debug-android"),(0,o.yg)("p",null,"The following diagram represents the flow of the ",(0,o.yg)("inlineCode",{parentName:"p"},"build-debug-android")," workflow:"),(0,o.yg)("mermaid",{value:'flowchart TD;\n    A["\ud83d\udd0d Lookup cached debug build (and skip all following steps if found)\\nUsing <a href=\'/setup-ci/docs/aux-workflows/lookup-cached-debug-build\'>lookup-cached-debug-build</a>"]--\x3eB["\ud83d\udcbe Maximize build space\\nUsing <a href=\'https://github.com/AdityaGarg8/remove-unwanted-software\'>AdityaGarg8/remove-unwanted-software</a>"]\n    B--\x3eC["\ud83c\udf3f Setup Node"];\n    C--\x3eD["\u2615 Setup JDK 17"]\n    D--\x3eE["\ud83d\udc18 Setup Gradle 8.8"]\n    E--\x3eF["\ud83d\udce6 Install dependencies"];\n    F--\x3eG["\ud83d\udee0\ufe0f Build [yarn build:debug:android]"]\n    G--\x3eH["\ud83d\udce1 Store built app in cache"]'}),(0,o.yg)("h4",{id:"build-debug-ios"},"build-debug-ios"),(0,o.yg)("p",null,"The following diagram represents the flow of the ",(0,o.yg)("inlineCode",{parentName:"p"},"build-debug-ios")," workflow:"),(0,o.yg)("mermaid",{value:'flowchart TD;\n    A["\ud83d\udd0d Lookup cached debug build (and skip all following steps if found)\\nUsing <a href=\'/setup-ci/docs/aux-workflows/lookup-cached-debug-build\'>lookup-cached-debug-build</a>"]--\x3eB["\ud83d\udcbe Maximize build space\\nUsing <a href=\'https://github.com/AdityaGarg8/remove-unwanted-software\'>AdityaGarg8/remove-unwanted-software</a>"]\n    B--\x3eC["\ud83c\udf3f Setup Node"];\n    C--\x3eD["\ud83d\udd28 Use latest stable Xcode"]\n    D--\x3eE["\ud83d\udce6 Install dependencies"];\n    E--\x3eF["\ud83d\udee0\ufe0f Build [yarn build:debug:ios]"]\n    F--\x3eG["\ud83d\udce1 Store built app in cache"]'}),(0,o.yg)("h2",{id:"known-issues-and-limitations"},"Known issues and limitations"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"One of limitations of GitHub Actions is that cache is scoped and cannot be accessed between\narbitrary branches (see ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/actions/cache/issues/79"},"#79"),"). This means that\nif a build with specific fingerprint is created on ",(0,o.yg)("inlineCode",{parentName:"li"},"feature-a")," branch, then in ",(0,o.yg)("inlineCode",{parentName:"li"},"feature-b"),"\nbranch with the same fingerprint, the build is not visible and the app will be built again.\nHowever, since the build is also created on main branch, once either ",(0,o.yg)("inlineCode",{parentName:"li"},"feature-a")," or ",(0,o.yg)("inlineCode",{parentName:"li"},"feature-b"),"\nis merged to main, the build will be cached and available for all existing and future branches in the repository.")))}p.isMDXComponent=!0}}]);