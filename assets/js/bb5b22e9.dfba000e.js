"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var o=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),l=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(t),g=r,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||a;return t?o.createElement(d,i(i({ref:n},c),{},{components:t})):o.createElement(d,i({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=g;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9181:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var o=t(8168),r=(t(6540),t(5680));const a={sidebar_position:5},i="Support for monorepos",p={unversionedId:"introduction/monorepos",id:"introduction/monorepos",title:"Support for monorepos",description:"All the features provided by SCI are available in monorepos as well! The only difference is that the configuration will be adjusted to work in a monorepo structure.",source:"@site/docs/introduction/monorepos.mdx",sourceDirName:"introduction",slug:"/introduction/monorepos",permalink:"/setup-ci/docs/introduction/monorepos",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Node/Bun version",permalink:"/setup-ci/docs/introduction/node-bun-version"},next:{title:"Limits of automation",permalink:"/setup-ci/docs/introduction/limits-of-automation"}},s={},l=[{value:"Monorepo specific behavior",id:"monorepo-specific-behavior",level:2},{value:"Example usage in monorepo",id:"example-usage-in-monorepo",level:2}],c={toc:l},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,o.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"support-for-monorepos"},"Support for monorepos"),(0,r.yg)("p",null,"All the features provided by SCI are available in monorepos as well! The only difference is that the configuration will be adjusted to work in a monorepo structure."),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"If you want to run SCI for a package in monorepo structure, ",(0,r.yg)("strong",{parentName:"p"},"run it from the root of this package (where package's ",(0,r.yg)("inlineCode",{parentName:"strong"},"package.json")," is located)"),", not the monorepo root directory.")),(0,r.yg)("h2",{id:"monorepo-specific-behavior"},"Monorepo specific behavior"),(0,r.yg)("p",null,"SCI automatically detects if you run it in a monorepo and adjusts the configuration accordingly. It\npeforms all necessary changes on the package level and generates workflows in ",(0,r.yg)("inlineCode",{parentName:"p"},".github/workflows")," directory at the root of the monorepo."),(0,r.yg)("p",null,"Workflows generated in monorepos are a bit different to ensure that they work correctly in monorepo structure. This difference involves both the name of workflow file\nand its content. Check out the following example usage for more details."),(0,r.yg)("h2",{id:"example-usage-in-monorepo"},"Example usage in monorepo"),(0,r.yg)("p",null,"Assume we have a monorepo with the following structure:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"repo\n\u251c\u2500\u2500 apps\n\u2502\xa0\xa0 \u251c\u2500\u2500 package-a\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 ...\n\u2502\xa0\xa0 \u2514\u2500\u2500 package-b\n\u2502\xa0\xa0     \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 yarn.lock\n")),(0,r.yg)("p",null,"Say that ",(0,r.yg)("inlineCode",{parentName:"p"},"package-a")," is a react native app for which we want to set up GitHub actions for Prettier and Maestro. We can run:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd apps/package-a\nnpx setup-ci --preset --prettier --maestro\n")),(0,r.yg)("p",null,"After running the script, we can see that a ",(0,r.yg)("inlineCode",{parentName:"p"},".github/")," directory has been created in monorepo root with the following content:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:"{2,3,4,5}","{2,3,4,5}":!0},"repo\n\u251c\u2500\u2500 .github\n\u2502\xa0\xa0 \u2514\u2500\u2500 workflows\n\u2502\xa0\xa0     \u251c\u2500\u2500 package-a-maestro.yml\n\u2502\xa0\xa0     \u2514\u2500\u2500 package-a-prettier.yml\n\u251c\u2500\u2500 apps\n\u2502\xa0\xa0 \u251c\u2500\u2500 package-a\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 file\n\u2502\xa0\xa0 \u2514\u2500\u2500 package-b\n\u2502\xa0\xa0     \u2514\u2500\u2500 file\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 yarn.lock\n")),(0,r.yg)("p",null,"These are the workflows that SCI generated for ",(0,r.yg)("inlineCode",{parentName:"p"},"package-a"),". Note that their name starts with the name of the package.\nThis is to ensure that all workflows generated in monorepo have unique names and can be easily identified."),(0,r.yg)("p",null,"If we inspect the contents of ",(0,r.yg)("inlineCode",{parentName:"p"},"package-a-prettier.yml"),", we can see\nsome quirks specific to workflows generated in monorepos."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'{5,6,19,26} title=".github/workflows/package-a-prettier.yml" showLineNumbers',"{5,6,19,26}":!0,title:'".github/workflows/package-a-prettier.yml"',showLineNumbers:!0},'name: Prettier check\n\non:\n  pull_request:\n    paths:\n      - apps/package-a/**\n\njobs:\n  prettier-check:\n    name: Prettier check\n    runs-on: ubuntu-latest\n    steps:\n      - name: \ud83c\udfd7 Setup repo\n        uses: actions/checkout@v4\n\n      - name: \ud83c\udf3f Setup Node\n        uses: actions/setup-node@v4\n        with:\n          node-version-file: "apps/package-a/.nvmrc"\n          cache: "yarn"\n\n      - name: \ud83d\udce6 Install dependencies\n        run: yarn install --immutable\n\n      - name: \u2728 Run Prettier check\n        run: yarn --cwd apps/package-a prettier:check\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Lines 5-6: the ",(0,r.yg)("inlineCode",{parentName:"li"},"paths")," field ensures that the workflow runs only when changes are made in ",(0,r.yg)("inlineCode",{parentName:"li"},"apps/package-a")," directory"),(0,r.yg)("li",{parentName:"ul"},"Line 19: the path to ",(0,r.yg)("inlineCode",{parentName:"li"},".nvmrc")," file is adjusted to point to ",(0,r.yg)("inlineCode",{parentName:"li"},"package-a")," directory"),(0,r.yg)("li",{parentName:"ul"},"Line 26: the ",(0,r.yg)("inlineCode",{parentName:"li"},"yarn")," command uses ",(0,r.yg)("inlineCode",{parentName:"li"},"--cwd")," flag to specify in which package it should be run (for npm projects, the ",(0,r.yg)("inlineCode",{parentName:"li"},"npm run --prefix")," option is used)")))}m.isMDXComponent=!0}}]);